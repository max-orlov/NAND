/**
 */
class WallBreakGame {
	// the base rectangle
	field Rectangle base;
	
	// the bouncing ball
	field Ball ball;
	
	// the direction of the base - 0: none, 1: right, 2: left
	field int baseDirection;
	// the direction of the ball - 1: up-right, 2: up-left, 3: down-right, 4: down-left
	field int ballDirection;
	
	/** Constructs a new Wall Break Game. */
    constructor WallBreakGame new(int level) {
        if ( level = 3 ){
            let base = Rectangle.new(242, 244, 20, 10);
            let ball = Ball.new(257, 238, 5, 4);

        }

        if ( level = 2 ){
            let base = Rectangle.new(242, 244, 25, 10);
            let ball = Ball.new(257, 238, 5, 3);
        }

        if ( level = 1){
            let base = Rectangle.new(242, 244, 30, 10);
            let ball = Ball.new(257, 238, 5, 2);
        }

        let baseDirection = 0;
		let ballDirection = 1;

        return this;
    }
	
    /** Deallocates the object's memory. */
    method void dispose() {
        do base.dispose();
		do ball.dispose();
        do Memory.deAlloc(this);
        return;
    }

    /** Starts the game. Handles inputs from the user that control
     *  the base's movement. */
    method void run() {
        var char key;
        var boolean exit, isGameOver;
        var String str;

        let exit = false;
        let isGameOver = false;
        let key = Keyboard.keyPressed();

        while ((~exit) & (~isGameOver)) {

            // Move the ball
            let isGameOver = moveBall();

            if ( ~isGameOver ){
                // Get key press
                let key = Keyboard.keyPressed();

                // Press 'q' to quit.
                if (key = 81) {
                    let exit = true;
                }

                // Press left to move the base left
                if (key = 132) {
                    let baseDirection = 1;
                }

                // Press right to move the base right
                if (key = 130) {
                    let baseDirection = 2;
                }

                // Move the base once, and stop it.
                do moveBase();
                let baseDirection = 0;

                // Delay for a while.
                do Sys.wait(4); // Delays the next movement.
            }
        }

        if ( isGameOver ){
            let str = String.new(10);
            let str = "You Lost";
            do Output.printString(str);
        }
            
        return;
	}

    /** Moves the base by 2 pixels in the current direction. */
    method void moveBase() {
        if (baseDirection = 1) {
            do base.moveRight();
        }
        if (baseDirection = 2) {
            do base.moveLeft();
        }

        return;
    }

    /** Moves the ball by 2 pixels in the current direction. */
    method boolean moveBall() {
		var boolean isGameOver;
		let isGameOver = false;
		let ballDirection = ball.getDirection(ballDirection, base);

        if (ballDirection = 1) {
            do ball.moveUpRight();
        }
        if (ballDirection = 2) {
            do ball.moveUpLeft();
        }
        if (ballDirection = 3) {
            let isGameOver = ball.moveDownRight(base);
        }
        if (ballDirection = 4) {
            let isGameOver = ball.moveDownLeft(base);
        }

        return isGameOver;
    }
}