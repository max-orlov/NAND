// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address, a=isRegister0, b=isRegister1, c=isRegister2, d=isRegister3, e=isRegister4, f=isRegister5, g=isRegister6, h=isRegister7);
	
    Register(in=in, load=isRegister0, out=register0);
    Register(in=in, load=isRegister1, out=register1);
    Register(in=in, load=isRegister2, out=register2);
    Register(in=in, load=isRegister3, out=register3);
    Register(in=in, load=isRegister4, out=register4);
    Register(in=in, load=isRegister5, out=register5);
    Register(in=in, load=isRegister6, out=register6);
    Register(in=in, load=isRegister7, out=register7);
	
	Mux8Way16(a=register0, b=register1, c=register2, d=register3, e=register4,f=register5,g=register6, h=register7, sel=address, out=out);
}