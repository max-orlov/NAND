/**
 * Implements a graphic rectangle. A graphic rectangle has a screen location
 * and a size and it can move.
 */
class Rectangle {

    // Location on the screen
    field int x, y;

    // The size of the rectangle
    field int width, height;

    /** Constructs a new rectangle with a given location and size. */
    constructor Rectangle new(int Ax, int Ay, int Awidth, int Aheight) {
        let x = Ax;
        let y = Ay;
        let width = Awidth;
		let height = Aheight;

        do draw();

        return this;
    }

    method int getY(){
        return y;
    }

    method int getX(){
        return x;
    }

    method int getWidth(){
        return width;
    }

    method int getHeight(){
        return height;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Draws the square on the screen. */
    method void draw() {
        do Screen.setColor(true);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }

    /** Erases the square from the screen. */
    method void erase() {
        do Screen.setColor(false);
        do Screen.drawRectangle(x, y, x + width, y + height);
        return;
    }

    /** Moves left by 2 pixels. */
    method void moveLeft() {
        if (x > 1) {
            do Screen.setColor(false);
            do Screen.drawRectangle((x + width) - 1, y, x + width, y + height);
            let x = x - 2;
            do Screen.setColor(true);
            do Screen.drawRectangle(x, y, x + 1, y + height);
        }
        return;
    }

    /** Moves right by 2 pixels. */
    method void moveRight() {
        if ((x + width) < 510) {
            do Screen.setColor(false);
            do Screen.drawRectangle(x, y, x + 1, y + height);
            let x = x + 2;
            do Screen.setColor(true);
            do Screen.drawRectangle((x + width) - 1, y, x + width, y + height);
        }
        return;
    }
}
